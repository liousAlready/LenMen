# -*- coding: utf-8 -*-
# @Time : 2022/3/1 18:58
# @Author : Limusen
# @File : 01 垃圾回收机制


x = 10  # 直接引用

# l=['a'的内存地址,'b'的内存地址, 10的内存地址]
l = ['a', 'b', x]  # 间接引用

# 垃圾回收机制原理
age = 18
m = age

xl = [age, m]  # 引用了18 两次
# 　引用计数只要为０就为垃圾


# 2.标记清除
# 列表的相互引用,循环引用
# 循环引用==》会导致内存泄漏

l1 = [111, ]
l2 = [222, ]
l1.append(l2)  # l1=[值111的内存地址，l2列表的内存地址 ]
l2.append(l1)  # l2=[值222的内存地址，l1列表的内存地址]
print(id(l1[1]))
print(id(l2))

print(id(l2[1]))
print(l1)

# 有几个方法渠道l2的值
print(l2)
print(l1[1])

# del l1  # 清除引用计数 只能清除直接引用，不能删除间接引用
# del l2  # 所以引用不到这两个列表


# 3.分代回收

# 分代回收机制可以这么理解
"""

一个班级30个人 每天检查交作业

第一天30个人按时交了 那就给他们奖励一个小红花
第二天30个人按时交了 继续奖励小红花
第三天只有25个人交了 只奖励25个人小红花

那么好了,有三个小红花的人我就隔两周检查一次作业


到了后面,有十个小红花的人,我就不检查,可以规定为好学生

可以理解为分段处理垃圾回收,在达到一定的阈值下讲其进行分段,然后在进行垃圾回收


"""

